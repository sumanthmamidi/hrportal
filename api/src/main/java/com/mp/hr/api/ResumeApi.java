/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.0-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.mp.hr.api;

import com.mp.hr.model.ErrorResponse;
import java.io.File;
import com.mp.hr.model.Resume;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;

@Api(value = "resume", description = "the resume API")
public interface ResumeApi {

    Logger log = LoggerFactory.getLogger(ResumeApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Get Resume by Id", nickname = "getResume", notes = "Returns a Resume", response = Resume.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A Resume", response = Resume.class),
        @ApiResponse(code = 404, message = "The Resume does not exists.", response = ErrorResponse.class) })
    @RequestMapping(value = "/resume/{resumeId}",
        method = RequestMethod.GET)
    default ResponseEntity<Resume> getResume(@ApiParam(value = "Resume's Id.",required=true) @PathVariable("resumeId") String resumeId) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"name\" : \"name\",  \"id\" : \"id\"}", Resume.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ResumeApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Uploads a file.", nickname = "resumePost", notes = "", response = Resume.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Resume created successfully", response = Resume.class),
        @ApiResponse(code = 404, message = "The Candidate does not exists.", response = ErrorResponse.class) })
    @RequestMapping(value = "/resume",
        consumes = { "multipart/form-data" },
        method = RequestMethod.POST)
    default ResponseEntity<Resume> resumePost(@ApiParam(value = "file detail") @Valid @RequestPart("file") MultipartFile upfile) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"name\" : \"name\",  \"id\" : \"id\"}", Resume.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ResumeApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
